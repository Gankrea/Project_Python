"""
位置参数
    调用函数时根据函数定义的参数位置来传递参数
    传递的参数和定义的参数的顺序及个数必须一致

关键字参数
    函数调用时通过“键=值”形式传递参数.
作用: 可以让函数更加清晰、容易使用，同时也清除了参数的顺序需求

缺省参数
    缺省参数也叫默认参数，用于定义函数，为参数提供默认值，调用函数时可不传该默认参数的值（注意：所有位置参数必须出现在默认参数前，包括函数定义和调用）.
作用: 当调用函数时没有传递参数, 就会使用默认是用缺省参数对应的值
注意：
    函数调用时，如果为缺省参数传值则修改默认参数值, 否则使用这个默认值

不定长参数
    不定长参数也叫可变参数. 用于不确定调用的时候会传递多少个参数(不传参也可以)的场景.
作用: 当调用函数时不确定参数个数时, 可以使用不定长参数


不定长参数的类型:
     ①位置传递
     ②关键字传递
位置传递
    传进的所有参数都会被args变量收集，它会根据传进参数的位置合并为一个元组(tuple)，args是元组类型，这就是位置传递
关键字传递
    参数是“键=值”形式的形式的情况下, 所有的“键=值”都会被kwargs接受, 同时会根据“键=值”组成字典.
"""


# 位置参数
def user_info1(name, age, gender):
    print(f'您的名字是{name},年龄是{age},性别是{gender}')


user_info1('TOM', 20, '男')


# 关键字参数
def user_info2(name, age, gender):
    print(f"您的名字是:{name},年龄是:{age},性别是:{gender}")


# 关键字传参
user_info2(name="小明", age=20, gender="男")
# 可以不按照固定顺序
user_info2(age=20, gender="男", name="小明")
# 可以和位置参数混用,位置参数必须在前,且匹配参数顺序
user_info2("小明", age=20, gender="男")


# 缺省参数（默认参数）
# 设置的默认参数必须在最后面
def user_info3(name, age, gender='男'):
    print(f'您的名字是{name},年龄是{age},性别是{gender}')


# 默认性别为男


user_info3('TOM', 20)
user_info3('Rose', 18, '女')


# 不定长-----位置传递
# 传进的所有参数都会被args变量收集，它会根据传进参数的位置合并为一个元组(tuple)，args是元组类型
def user_info4(*args):
    print(args)
    print(type(args))


# ('TOM',)
user_info4('TOM')
# ('TOM', 18)
user_info4('TOM', 18)


# 不定长-----关键字传递
# 参数是“键=值”形式的形式的情况下,所有的“键=值”都会被kwargs接受,同时会根据“键=值”组成字典
def user_info5(**kwargs):
    print(kwargs)
# 数据类型是字典，若数据不是key=vlue的形式将会报错
    print(type(kwargs))

user_info5(name='张三', age=17, gender="男", id=110)
